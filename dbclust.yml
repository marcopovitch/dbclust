file:
  # root Data path
  data_path: &DATA Data

  #temporary directory
  tmp_path: !join [*DATA, "/", "tmp/nll"]

  # path definition to store nll obs and qml files
  obs_path: !join [*DATA, "/", "obs"]
  qml_path: !join &QML_PATH [*DATA, "/", "qml"]

  # path to phaseNet/EQT picks file
  picks_path: !join &PICK_PATH [*DATA, "/", "picks"]

  picks_type: phasenet
  picks_csv: !join [*PICK_PATH, "/", "picks.csv"]

  #picks_type: eqt
  #picks_csv: !join [*PICK_PATH, "/", "EQT-2022-09-10.csv"]
  #picks_csv: !join [*PICK_PATH, "/", "picks_eqt.csv"]

time:
  # filter picks between [date_begin, date_end]
  #date_begin: 2022-06-30T00:00:00.000Z
  #date_end: 2022-08-08T00:00:00.000Z
  #date_begin: 2022-07-24T21:59:00.000Z
  #date_end:   2022-07-24T22:02:00.000Z

  # work on max time_window (mind the units !)
  # computation time increase a lot with time_window
  time_window: 15 # minutes
  # time window for data overlaping (mind the units !)
  overlap_window: 60 # seconds

pick:
  # pick uncertainty
  P_uncertainty: 0.1
  S_uncertainty: 0.2

  # import only phase with proba >=phase_proba_threshold
  P_proba_threshold: 0.2
  S_proba_threshold: 0.5

# parameters for clustering
cluster:
  # used by hdbscan
  min_cluster_size: &MIN_CLUSTER_SISE 8

  # discard cluster with stations count (without duplicate) below this value
  min_station_count: &CLUSTER_MIN_STATION_COUNT 6

  # km/s
  average_velocity: 5

  # no more usefull with hdbscan
  # but can be forced (called epsilon or eps)
  # max_search_dist: 4

  # nb of picks in common to merge cluster in the overlapped zone
  min_picks_common: 6

  # WARNING : to be used only for a unique event !
  # Don't use it if you don't know what you are doing !
  #pre_computed_tt_matrix:
  #  !join [*DATA, "/", "tt_matrix-min_size", *MIN_CLUSTER_SISE, ".npy"]

nll:
  # NLLoc binary
  bin: /opt/nll/bin/NLLoc

  # time grid files
  nll_time_path: /Users/marc/Dockers/routine/nll/data/times

  # location of nll configuration template
  nll_template_path: /Users/marc/github/dbclust/nll_template

  # use this profile by default
  default_velocity_profile: haslach
  velocity_profile:
    - name: alpes
      template: nll_alpes_template.conf

    - name: auvergne
      template: nll_auvergne_template.conf

    - name: haslach
      template: nll_haslach_template.conf

    - name: pyrenees
      template: nll_pyrenees_template.conf

    - name: rittershoffen
      template: nll_rittershoffen_template.conf

    - name: vendenheim
      template: nll_vendenheim_template.conf

  # file to keep track of SCNL when importing NLL obs file
  # file format: NET_STA_LOC_CHAN
  #   eg. FR_PYHE_00_HHZ
  # nll_channel_hint: null
  nll_channel_hint: !join [*DATA, "/", "chan.txt"]

  # NLL will discard any location with number of phase < nll_min_phase
  # use -1 to not set a limit
  nll_min_phase: *CLUSTER_MIN_STATION_COUNT

  # verbose
  verbose: False

# enable a nll relocation (ie. double pass) with pick filtering
# based on pick's time residual threshold
relocation:
  dist_km_cutoff: null
  double_pass: True
  P_time_residual_threshold: 0.40
  S_time_residual_threshold: 0.75

# force these attributes in quakeml file
quakeml:
  agency_id: RENASS
  author: marc.grunberg
  #evaluation_mode: automatic
  evaluation_mode: manual
  method_id: NonLinLoc
  #model_id: will be set to the profile name used

# Catalog will be saved more or less every event_flush_count
# resulting file will be : "qml_base_filename-part-%d.qml"
catalog:
  qml_base_filename: mycatalog
  event_flush_count: 100
